---

- name: Set Variables for Clustered Nodes
  set_fact:
    cassandra_cluster_name: "{{ cassandra_cluster_name }}"
    cassandra_join_cluster: True
    cassandra_seed: "{{ groups['cassandra_seed'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | join(',') }}"
  when: "'cassandra_clustered' in group_names"

- name: Set Variables for Standalone Nodes
  set_fact:
    cassandra_cluster_name: Standalone
    cassandra_seed: "{{ ansible_default_ipv4.address }}"
  when: "'cassandra_standalone' is in group_names"

- name: Configure the Apache Cassandra YUM Repository
  yum_repository:
    name: cassandra
    baseurl: "https://www.apache.org/dist/cassandra/redhat/{{ cassandra_repo_apache_release }}/"
    gpgcheck: yes
    description: Apache Cassandra
    repo_gpgcheck: yes
    gpgkey: https://www.apache.org/dist/cassandra/KEYS

- name: Import Join Cluster Tasks
  include: join_cluster.yml
  when: cassandra_join_cluster | bool

- name: Calculate cassandra_cms_max_heapsize_mb
  set_fact:
    cassandra_cms_max_heapsize_mb: "{{
      [
        ([ansible_memtotal_mb * 0.5, 1024] | min),
        ([ansible_memtotal_mb * 0.25, 14336] | min)
      ] | max | round | int }}"
  when:
    - ansible_memtotal_mb is defined
    - cassandra_cms_max_heapsize_mb is not defined

- name: Calculate cassandra_max_heapsize_mb
  set_fact:
    cassandra_max_heapsize_mb: "{{
      [
        ([ansible_memtotal_mb * 0.5, 1024] | min),
        ([ansible_memtotal_mb * 0.25, 8192] | min)
      ] | max | round | int }}"
  when:
    - ansible_memtotal_mb is defined
    - cassandra_max_heapsize_mb is not defined

- name: Calculate cassandra_cms_heap_new_size_mb
  set_fact:
    cassandra_cms_heap_new_size_mb: "{{
      [
        (ansible_processor_vcpus * 100.0),
        ((cassandra_cms_max_heapsize_mb | int) * 0.25)
      ] | min | round | int }}"
  when:
    - ansible_memtotal_mb is defined
    - ansible_processor_vcpus is defined
    - cassandra_cms_heap_new_size_mb is not defined

- name: Calculate cassandra_heap_new_size_mb
  set_fact:
    cassandra_heap_new_size_mb: "{{
      [
        (ansible_processor_vcpus * 100.0),
        ((cassandra_max_heapsize_mb | int) * 0.25)
      ] | min | round | int }}"
  when:
    - ansible_memtotal_mb is defined
    - ansible_processor_vcpus is defined
    - cassandra_heap_new_size_mb is not defined

- name: Debug Custom Facts
  debug:
    msg: {
      'ansible_memtotal_mb': "{{ ansible_memtotal_mb }}",
      'ansible_processor_vcpus': "{{ ansible_processor_vcpus }}",
      'cassandra_cms_heap_new_size_mb': "{{ cassandra_cms_heap_new_size_mb }}",
      'cassandra_cms_max_heapsize_mb': "{{ cassandra_cms_max_heapsize_mb }}",
      'cassandra_heap_new_size_mb': "{{ cassandra_heap_new_size_mb }}",
      'cassandra_max_heapsize_mb': "{{ cassandra_max_heapsize_mb }}"
    }
    verbosity: 1
  when:
    - ansible_memtotal_mb is defined
    - ansible_processor_vcpus is defined

- name: Install the Cassandra Package
  yum:
    name: "{{ cassandra_package }}"
    update_cache: yes
  delay: "{{ cassandra_task_delay }}"
  retries: "{{ cassandra_task_retries }}"
  register: cassandra_yum_install_result
  until: cassandra_yum_install_result is succeeded
  when:
    - cassandra_install_packages | bool
    - not ansible_check_mode

- name: Systemd Workaround
  template:
    src: "{{ cassandra_systemd_template }}"
    dest: "{{ cassandra_systemd_path }}"
    owner: root
    group: root
    mode: 0644
  when: cassandra_systemd_enabled | bool
  notify:
    - cassandra_restart_service

- name: Custom Directories
  include: create_custom_directory.yml
  with_items: "{{ cassandra_directories.keys() | list }}"
  loop_control:
    loop_var: cassandra_directory_set
  when:
    - cassandra_directories is defined

- name: Set Default Configuration File Location
  set_fact:
    cassandra_configuration_directory: /etc/cassandra/default.conf
    cassandra_configuration_file: /etc/cassandra/default.conf/cassandra.yaml
  when:
    - cassandra_configuration_file is not defined

- name: Apply Cassandra Configuration
  template:
    src: "{{ cassandra_configuration_templ }}"
    dest: "{{ cassandra_configuration_file }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - cassandra_restart_service

- name: Apply Regular Expression Updates to the Configuration
  lineinfile:
    line: "{{ item.line }}"
    path: "{{ cassandra_configuration_directory }}/{{ item.path }}"
    regexp: "{{ item.regexp }}"
  loop: "{{ cassandra_regex_replacements }}"
  when:
    - not ansible_check_mode
  notify:
    - cassandra_restart_service

- name: Set the DC for Cassandra
  lineinfile:
    dest: "{{ cassandra_configuration_file | dirname }}/cassandra-rackdc.properties"
    regexp: '^dc='
    line: "dc={{ cassandra_dc }}"
  when:
    - cassandra_dc is defined
    - not ansible_check_mode
  notify:
    - cassandra_restart_service

- name: Set the Rack for Cassandra
  lineinfile:
    dest: "{{ cassandra_configuration_file | dirname }}/cassandra-rackdc.properties"
    regexp: '^rack='
    line: "rack={{ cassandra_rack }}"
  when:
    - cassandra_rack is defined
    - not ansible_check_mode
  notify:
    - cassandra_restart_service

- name: Ensure the Service is in the Required State
  systemd:
    name: cassandra
    enabled: "{{ cassandra_service_enabled }}"
    daemon_reload: yes
    state: "{{ cassandra_service_state }}"
  when:
    - not ansible_check_mode
