---
dependency:
  name: galaxy

driver:
  name: docker

lint: |
  set -ex
  yamllint -s .
  ansible-lint

platforms:
  - name: node0
    image: docker.io/pycontribs/centos:7
    pre_build_image: true
    privileged: True
    command: /sbin/init
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    environment:
      container: docker
    restart_policy: on-failure
    groups:
      - cassandra
      - clustered
      - ${DOCKER_IMAGE:-debian}${DOCKER_TAG_1:-9}

  - name: node1
    image: docker.io/pycontribs/centos:7
    pre_build_image: true
    privileged: True
    command: /sbin/init
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    environment:
      container: docker
    restart_policy: on-failure
    groups:
      - cassandra
      - clustered
      - ${DOCKER_IMAGE:-debian}${DOCKER_TAG_1:-9}

  - name: node2
    image: docker.io/pycontribs/centos:7
    pre_build_image: true
    privileged: True
    command: /sbin/init
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    environment:
      container: docker
    restart_policy: on-failure
    groups:
      - cassandra
      - clustered
      - ${DOCKER_IMAGE:-debian}${DOCKER_TAG_1:-9}

  - name: node3
    image: docker.io/pycontribs/centos:7
    pre_build_image: true
    privileged: True
    command: /sbin/init
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    environment:
      container: docker
    restart_policy: on-failure
    groups:
      - cassandra
      - clustered
      - ${DOCKER_IMAGE:-debian}${DOCKER_TAG_1:-9}

provisioner:
  name: ansible

  config_options:
    defaults:
      callback_whitelist: "profile_tasks,timer"

  inventory:
    group_vars:
      centos7:
        cassandra_systemd_enabled: True
      centos8:
        cassandra_systemd_enabled: True
        ansible_python_interpreter: python3
      debian9:
      debian10:
        cassandra_15770_workaround: True
      fedora30:
        ansible_python_interpreter: python3
        cassandra_systemd_enabled: True
      fedora31:
        ansible_python_interpreter: python3
        cassandra_systemd_enabled: True
      ubuntu18.04:
      ubuntu20.04:
        cassandra_15770_workaround: True

  log: True

  options:
    v: 1

scenario:
  test_sequence:
    # Pretty much the default test sequence, just added the check step.
    - lint
    - destroy
    - syntax
    - create
    - prepare
    - check
    - converge
    - idempotence
    - verify

verifier:

  name: testinfra

  options:
    connection: docker
    durations: 3
    v: 1
